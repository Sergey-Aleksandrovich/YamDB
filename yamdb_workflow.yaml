name: yamdb workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
      -   
        name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - 
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt
      - 
        name: Lint with flake8
        run: flake8 .
      -
        name: Test with pytest
        run: pytest tests.py

  push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    #needs: tests пока закомментировал, т.к. много чего не по pep8(длинна строки большая чаще всего). Чтобы следующие джобы делал.
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - 
        name: Push to Docker Hub yamdb
        uses: docker/build-push-action@v2
        with:
          push: true
          repository: 7741994/yamdb_web
          tags: 7741994/yamdb_web:v1.000
  
  deploy:
    runs-on: ubuntu-latest
    needs: push_to_docker_hub
    steps:
      - 
        name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/sprint19/project/yamdb_final
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker-compose up -d
            
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - 
        name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
